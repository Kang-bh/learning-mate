name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: kabyho3513/learning-mate

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Gradle
        run: ./gradlew build

  dockerize-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: |
            docker pull ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            docker-compose down
            echo "${{ secrets.APPLICATION_PROPERTIES }}" > application.properties
            echo "version: '3.8'
            services:
              app:
                image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
                ports:
                  - '8080:8080'
                depends_on:
                  - db
                  - redis
                volumes:
                  - ./application.properties:/app/application.properties
                environment:
                  SPRING_CONFIG_LOCATION: file:/app/application.properties
              db:
                image: mysql:8.0
                volumes:
                  - mysql-data:/var/lib/mysql
                environment:
                  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
                  MYSQL_DATABASE: learning-mate
                ports:
                  - '3306:3306'
              redis:
                image: redis:6.2-alpine
                ports:
                  - '6379:6379'
                volumes:
                  - redis-data:/data
            volumes:
              mysql-data:
              redis-data:" > docker-compose.yml
            docker-compose up -d
